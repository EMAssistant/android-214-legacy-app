apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            keyAlias RELEASE_STORE_PASSWORD
            storePassword RELEASE_STORE_PASSWORD
            keyPassword RELEASE_KEY_PASSWORD
        }
    }
    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId "com.randomvoids.emassistant"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation" : "$projectDir/schemas".toString()]
            }
        }
        signingConfig signingConfigs.release
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlin.time.ExperimentalTime"]
        kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"]
    }
    bundle {
        language {
            // This is disabled so that the App Bundle does NOT split the APK for each language.
            // We're gonna use the same APK for all languages.
            enableSplit false
        }
    }
    namespace 'com.randomvoids.emassistant'
    lint {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    //android supports
    implementation "com.google.android.material:material:1.3.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"

    //architecture components
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycleVersion"
    implementation "androidx.room:room-runtime:$versions.roomVersion"
    implementation "androidx.room:room-ktx:$versions.roomVersion"
    kapt "androidx.room:room-compiler:$versions.roomVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation "androidx.navigation:navigation-runtime-ktx:$versions.nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.nav_version"

    // debugging
    //https://caster.io/search?q=timber
    implementation "com.jakewharton.timber:timber:4.7.1"

    // for PDFs
    implementation 'com.tom-roush:pdfbox-android:2.0.9.0'
    implementation 'androidx.documentfile:documentfile:1.0.1'

    //for human signatures
    //TODO make this load current signature. See https://github.com/gcacace/android-signaturepad/pull/157
    implementation project(":signature-pad")

    //hilt
    implementation "com.google.dagger:hilt-android:$versions.daggerHiltCoreVersion"
    implementation "androidx.hilt:hilt-common:$versions.daggerHiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "com.google.dagger:hilt-compiler:$versions.daggerHiltCoreVersion"
    kapt "androidx.hilt:hilt-compiler:$versions.daggerHiltVersion"

    //for initializing things at startup. ex: Timber. See AndroidManifest for it
    implementation "androidx.startup:startup-runtime:1.1.0"

    implementation "com.github.skydoves:whatif:$versions.whatIfVersion"
    implementation "com.github.skydoves:whatif-android:$versions.whatIfVersion" // for android extensions

    implementation "joda-time:joda-time:2.10.6"

    //for doing fancy looking Toasts
    implementation "com.github.GrenderG:Toasty:1.5.0"

    //oauth2
    implementation ("com.google.android.gms:play-services-auth:19.0.0")
    //https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-v2-android
    implementation ("com.microsoft.identity.client:msal:2.0.4") { exclude group: "com.microsoft.device.display" }

    implementation ("com.squareup.retrofit2:retrofit:2.9.0")
}
kapt {
    correctErrorTypes true
    javacOptions {
        // These options are normally set automatically via the Hilt Gradle plugin, but we
        // set them manually to workaround a bug in the Kotlin 1.5.20
        // https://youtrack.jetbrains.com/issue/KT-47416
        option("-Adagger.fastInit=ENABLED")
        option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
    }
}
